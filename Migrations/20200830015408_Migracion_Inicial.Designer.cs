// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PensumProgresoAcademico.DAL;

namespace PensumProgresoAcademico.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20200830015408_Migracion_Inicial")]
    partial class Migracion_Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.Estudiantes", b =>
                {
                    b.Property<int>("Matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditosPendientes")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<int>("HorasPracticasPendientes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorasTeoricasPendientes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MateriasPendientes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int>("PensumId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Matricula");

                    b.HasIndex("PensumId");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.Inscripciones", b =>
                {
                    b.Property<int>("InscripcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadMateria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditosSelccionados")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("Matricula")
                        .HasColumnType("INTEGER");

                    b.HasKey("InscripcionId");

                    b.HasIndex("Matricula");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.InscripcionesDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<int>("InscripcionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Clave");

                    b.HasIndex("InscripcionId");

                    b.ToTable("InscripcionesDetalle");
                });

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.Materias", b =>
                {
                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Creditos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<byte>("HorasPracticas")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("HorasTeoricas")
                        .HasColumnType("INTEGER");

                    b.HasKey("Clave");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.Pensum", b =>
                {
                    b.Property<int>("PensumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Carrera")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duracion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PensumCreditos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PensumHorasPracticas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PensumHorasTeoricas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TituloOtorgar")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalMaterias")
                        .HasColumnType("INTEGER");

                    b.HasKey("PensumId");

                    b.ToTable("Pensum");
                });

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.PensumDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<int>("PensumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prerequisitos")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Clave");

                    b.HasIndex("PensumId");

                    b.ToTable("PensumDetalle");
                });

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.Estudiantes", b =>
                {
                    b.HasOne("PensumProgresoAcademico.Entidades.Pensum", "Pensum")
                        .WithMany()
                        .HasForeignKey("PensumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.Inscripciones", b =>
                {
                    b.HasOne("PensumProgresoAcademico.Entidades.Estudiantes", "Estudiante")
                        .WithMany()
                        .HasForeignKey("Matricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.InscripcionesDetalle", b =>
                {
                    b.HasOne("PensumProgresoAcademico.Entidades.Materias", "Materia")
                        .WithMany()
                        .HasForeignKey("Clave");

                    b.HasOne("PensumProgresoAcademico.Entidades.Inscripciones", null)
                        .WithMany("InscripcionesDetalles")
                        .HasForeignKey("InscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PensumProgresoAcademico.Entidades.PensumDetalle", b =>
                {
                    b.HasOne("PensumProgresoAcademico.Entidades.Materias", "Materia")
                        .WithMany()
                        .HasForeignKey("Clave");

                    b.HasOne("PensumProgresoAcademico.Entidades.Pensum", null)
                        .WithMany("PensumDetalles")
                        .HasForeignKey("PensumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
